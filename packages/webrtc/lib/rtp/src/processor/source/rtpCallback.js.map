{"version":3,"file":"rtpCallback.js","sourceRoot":"","sources":["../../../../../../rtp/src/processor/source/rtpCallback.ts"],"names":[],"mappings":";;;AAAA,uCAA0C;AAO1C,MAAa,iBAAiB;IAG5B,YACU,UAGJ,EAAE;;;;;mBAHE;;QAHV;;;;;WAAwC;QAexC;;;;mBAAQ,CAAC,MAA0B,EAAE,EAAE;gBACrC,MAAM,GAAG,GACP,MAAM,YAAY,eAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,eAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAEvE,IACE,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,SAAS;oBACrC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,GAAG,CAAC,MAAM,CAAC,WAAW,EACnD;oBACA,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE;wBACrC,GAAG,CAAC,KAAK,EAAE,CAAC;qBACb;oBACD,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,EAAE,EAAE;oBACX,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;iBAClB;YACH,CAAC;WAAC;QAxBA,OAAO,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,IAAI,IAAI,CAAC;IACtE,CAAC;IAED,IAAI,CAAC,EAA8B;QACjC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IAqBD,IAAI;QACF,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;SACxB;IACH,CAAC;CACF;AAxCD,8CAwCC","sourcesContent":["import { RtpPacket } from \"../../rtp/rtp\";\n\nexport interface RtpOutput {\n  rtp?: RtpPacket;\n  eol?: boolean;\n}\n\nexport class RtpSourceCallback {\n  private cb?: (chunk: RtpOutput) => void;\n\n  constructor(\n    private options: {\n      payloadType?: number;\n      clearInvalidPTPacket?: boolean;\n    } = {}\n  ) {\n    options.clearInvalidPTPacket = options.clearInvalidPTPacket ?? true;\n  }\n\n  pipe(cb: (chunk: RtpOutput) => void) {\n    this.cb = cb;\n  }\n\n  input = (packet: Buffer | RtpPacket) => {\n    const rtp =\n      packet instanceof RtpPacket ? packet : RtpPacket.deSerialize(packet);\n\n    if (\n      this.options.payloadType != undefined &&\n      this.options.payloadType !== rtp.header.payloadType\n    ) {\n      if (this.options.clearInvalidPTPacket) {\n        rtp.clear();\n      }\n      return;\n    }\n\n    if (this.cb) {\n      this.cb({ rtp });\n    }\n  };\n\n  stop() {\n    if (this.cb) {\n      this.cb({ eol: true });\n    }\n  }\n}\n"]}