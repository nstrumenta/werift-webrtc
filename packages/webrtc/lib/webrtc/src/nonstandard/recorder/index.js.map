{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/nonstandard/recorder/index.ts"],"names":[],"mappings":";;;AAEA,wCAA4C;AAE5C,MAAa,aAAa;IAIxB,YACS,MAA0B,EAC1B,IAAY,EACZ,UAAyC,EAAE;;;;;mBAF3C;;;;;;mBACA;;;;;;mBACA;;QANT;;;;;WAAoB;QACpB;;;;;WAAY;QAOV,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE;YAClB,QAAQ,IAAI,CAAC,GAAG,EAAE;gBAChB,KAAK,MAAM;oBACT,OAAO,IAAI,kBAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACxC;oBACE,MAAM,IAAI,KAAK,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,EAAE,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,KAAuB;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,KAAK;QACT,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;CACF;AA/BD,sCA+BC","sourcesContent":["import { MediaStreamTrack } from \"../../media/track\";\nimport { MediaWriter } from \"./writer\";\nimport { WebmFactory } from \"./writer/webm\";\n\nexport class MediaRecorder {\n  writer: MediaWriter;\n  ext: string;\n\n  constructor(\n    public tracks: MediaStreamTrack[],\n    public path: string,\n    public options: Partial<MediaRecorderOptions> = {}\n  ) {\n    this.ext = path.split(\".\").slice(-1)[0];\n    this.writer = (() => {\n      switch (this.ext) {\n        case \"webm\":\n          return new WebmFactory(path, options);\n        default:\n          throw new Error();\n      }\n    })();\n  }\n\n  addTrack(track: MediaStreamTrack) {\n    this.tracks.push(track);\n  }\n\n  async start() {\n    await this.writer.start(this.tracks);\n  }\n\n  async stop() {\n    await this.writer.stop();\n  }\n}\n\nexport interface MediaRecorderOptions {\n  width: number;\n  height: number;\n  jitterBufferLatency: number;\n  jitterBufferSize: number;\n  waitForKeyframe: boolean;\n  defaultDuration: number;\n}\n"]}